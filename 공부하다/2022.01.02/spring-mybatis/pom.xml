<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sample</groupId>
  <artifactId>spring-mybatis</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>spring-mybatis Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <spring.version>5.3.14</spring.version>
  </properties>

  <dependencies>
  <!-- 스프링 컨테이너를 제공하는 spring Context라이브러리 의존성 추가 -->
  <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${spring.version}</version>
         <!-- 스프링 실행과정에서 출력되는 로그를 commons-logging을 사용하지 않게 한다.  
                  <groupId>org.apache.logging.log4j</groupId>을 사용하기 위해서 사용하지 않게 만든 것
         -->
         <exclusions>
            <exclusion>
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
  <!-- 
  	spring web applicarion 개발에 필요한 라이브러리 의존성 추가
   -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-webmvc</artifactId>
	    <version>${spring.version}</version>
	    <!--  -->
	</dependency>
	<!-- 
		데이터베이스 엑세스, 트랜잭션 처리를 지원하는 라이브러리 의존성 추가
	 -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>5.3.14</version>
	</dependency>
	<!-- 
		java Web, JSTL 라이브러리 의존성 추가
	 -->
	  <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

        <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
        </dependency>

        <dependency>
		    <groupId>taglibs</groupId>
		    <artifactId>standard</artifactId>
		    <version>1.1.2</version>
        </dependency>
        <!-- 
        	프로그램 실행로그 출력을 지원하는 라이브러리 의존성 추가
         -->
        <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>2.17.1</version>
      </dependency>
	<!-- 
		개발자 단위테스트를 지원하는 라이브러리 의존성 추가
		단위 테스트 : 개발자가 개발한 기능에 대한 테스트를 하는 것
		단위 : 개발자의 기능은 작기 때문에 작게 쪼개서 단위라고 부른다.
		제이유닛이 존재하는데 시각적으로 표시한다. 
		단위테스트 -> 통합테스트 진행한다. 테스트 완료된 것을 git에 올려야한다. 
	 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!-- 데이터베이스와 연결된 Connection Pool을 제공하는 라이브러리 의존성 추가 -->
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-dbcp2</artifactId>
	    <version>2.9.0</version>
	</dependency>
	<!-- 
		mybatis core 라이브러리 의존성 추가
	 -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.5.9</version>
	</dependency>
	<!-- 
		스프링에서 mybatis를 쉽게 사용할 수 있도록 지원하는 라이브러리 의존성 추가
	 -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>2.0.6</version>
	</dependency>
	<!-- 
		오라클 jdbc 드라이버 라이브러리 의존성 추가
	 -->
	 <dependency>
    		<groupId>com.oracle.database.jdbc</groupId>
    		<artifactId>ojdbc8</artifactId>
    		<version>21.4.0.0.1</version>
		</dependency>
  </dependencies>

  <build>
    <finalName>spring-mybatis</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
