package example_09_06_class;

public class ScoreApp2 {

	public static void main(String[] args) {
		// 배열을 이용해서 여러 명의 성적을 관리하기
		
		//score객체의 주소값 3개를 저장할 수 있는 배열객체를 생성하고, 배열객체의 주소값을 참조변수 scores에 대입함
		Score[] scores = new Score[3];
		
		
		//객체를 만들어서 담을 예정
		//Score객체를 생성해서 참조변수 score1에 주소값 대입
		Score score1 = new Score();
		//참조변수 score1으로 생성된 Score객체의 멤버변수에 성적정보 저장
		score1.name = "김유식";
		score1.kor = 100;
		score1.eng = 80;
		score1.math = 40;
		score1.total =score1.kor + score1.eng + score1.math;
		score1.average = score1.total/ 3;
		// 참조변수 score1에 저장된 주소값을 배열객체를 참조하는 scores 참조변수를 이용해서 배열객체의0번째 칸에 저장
		// 배열객체의 0번째 칸도 참조변수 score1이 참조하는 객체를 같이 참조하기 시작함.
		// 따라서 , score1이 참조하는 객체가 배열객체의 0번째 칸과 연결됨(저장됨)
		scores[0]=score1;//scores0번째에다가 score1번의 값을 입력함.
		
		//참조변수 score2으로 생성된 score객체의 맴버변수에 성적정보를 저장
		Score score2 =new Score();//객체를 생성한 후 배열에 대입하는 것 
		score2.name="김쩡글";
		score2.kor = 50;
		score2.eng = 70;
		score2.math = 100;
		score2.total = score2.kor + score2.eng +score2.math;
		score2.average = score2.total/3;
		
		//score2에 있는 곳을 바라보기 때문에 .을 붙여서 호출해주어야함
		//참조변수 score2에 저장된 주소값을 배열객체를 참조하는 scores 참조변수를 이용해서 배열객체의 1번째 칸에 저장
		scores[1]=score2;
		
		// 참조변수 scores3으로 생성된 score객체의 맴버변수에 성적정보를 저장
		Score score3 = new Score();
		score3.name = "김떡대";
		score3.kor = 100;
		score3.eng = 80;
		score3.math = 90;
		score3.total = score3.kor + score3.eng +score3.math;
		score3.average = score3.total/3;
		//참조변수 score3에 저장된 주소값을 배열객체에 참조하는 scores 참조변수를 이용하여 배열객체에 2번째 칸에 저장
		scores[2] = score3;
		
		//참조변수 scores가 참조하는 배열의 0, 1, 2번째 칸에 각각 score 객체연결(저장)이 완료됨
		//마침내, 참조변수 scores만 사용해서 모든 성적정보를 관리할 수 있다. 
		
		System.out.println("이번 시험에 참가한 학생들의 이름을 출력하기 ");
		System.out.println(scores[0].name + "," + scores[0].average);//주소값이 score객체를 참조함으로 출력을 함.
		System.out.println(scores[1].name + "," + scores[1].average);
		System.out.println(scores[2].name + "," + scores[2].average);
		
		//배열에 순서대로 저장되어 있기 때문에 반복문을 사용해서 학생들의 성적정보를 처리 할 수 있다. 
		System.out.println("반복문을 사용해서 이번 시험에 참가한 학생들의 이름을 출력하기");
		for(int i = 0; i<scores.length; i++) {
			System.out.println(scores[i].name + "," + scores[i].average);
		}
		//배열에 순서대로 저장되어 있기 때문에 향상된 -for문을 사용해서 학생들의 성적정보를 처리할 수 있음
		System.out.println("향상된-for문을 사용해서 이번 시험에 참가한 학생들의 이름을 출력하기");
		for(Score score :scores) {
			System.out.println(score.name + "," + score.average);
		
		}
	}
}
