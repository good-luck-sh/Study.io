CREATE TABLE TB_SAMPLE_CUSTOMERS
(
   CUSTOMER_NO number(4,0) CONSTRAINT CUSTOMER_NO_PK PRIMARY KEY,
   CUSTOMER_NAME varchar2(100) CONSTRAINT CUSTOMER_NAME_NN NOT NULL,
   CUSTOMER_TEL varchar2(20) CONSTRAINT CUSTOMER_TEL_NN NOT NULL,--NN와 UK제약조건이 부여됨
   CUSTOMER_POINT number(7,0) DEFAULT 0,
   CUSTOMER_IN_OUT varchar2(10) DEFAULT '퇴실',
   CUSTOMER_CREATED_DATE date DEFAULT SYSDATE,
    CONSTRAINT CUSTOMER_TEL_UK UNIQUE (CUSTOMER_TEL) --NN제약조건 후 별도로 걸 제약조건
);

CREATE TABLE TB_SAMPLE_FOOD_CATEGORIES
(
   CATEGORY_NO number(4,0) CONSTRAINT FOODCAT_NO_PK PRIMARY KEY,
   CATEGORY_NAME varchar2(100)CONSTRAINT FOODCAT_NAME_NN NOT NULL
);

CREATE TABLE TB_SAMPLE_FOODS
(
   FOOD_NO number(4,0) CONSTRAINT FOOD_NO_PK PRIMARY KEY,
   FOOD_NAME varchar2(200) CONSTRAINT FOOD_NAME_NN NOT NULL,
   FOOD_PRICE number(7,0),
   FOOD_STOCK number(4,0),
   FOOD_ON_SALE varchar2(30) DEFAULT '판매중',
   CATEGORY_NO number(4,0) CONSTRAINT FOOD_CATNO_FK REFERENCES TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO)
);

CREATE TABLE TB_SAMPLE_FOOD_ORDERS
(
   ORDER_NO number(7,0) CONSTRAINT FOODORDER_NO_PK PRIMARY KEY, --주문 번호 
   CUSTOMER_NO number(4,0) CONSTRAINT FOODORDER_CUSTNO_FK REFERENCES TB_SAMPLE_CUSTOMERS(CUSTOMER_NO), --고객테이블의 고객번호를 참조하도록 작성함
   ORDER_TOTAL_PRICE number(7,0) CONSTRAINT FOODORDER_PRICE_CK CHECK (ORDER_TOTAL_PRICE > 0), --CHECK제약조건을 설정함
   ORDER_STATUS varchar2(30) DEFAULT '주문완료',
   ORDER_CREATED_DATE date DEFAULT SYSDATE
);


CREATE TABLE TB_SAMPLE_FOOD_ORDER_ITEMS
(--하나의 주문에 대해서 여러개의 상품이 주문될 수 있도록 설정함.
   ORDER_NO number(5,0) CONSTRAINT ITEM_ORDERNO_FK REFERENCES TB_SAMPLE_FOOD_ORDERS (ORDER_NO),
   FOOD_NO number(4,0) CONSTRAINT ITEM_FOODNO_FK REFERENCES TB_SAMPLE_FOODS (FOOD_NO),
   FOOD_AMOUNT number(2,0) CONSTRAINT ITEM_AMOUNT_CK CHECK (FOOD_AMOUNT > 0)
);

CREATE SEQUENCE CUSTOMER_SEQ START WITH 1001;--새로운 고객이 들어올때 구현할 시퀀스
CREATE SEQUENCE FOOD_SEQ START WITH 5001;--음식이 들어올때 구현할 시퀀스
CREATE SEQUENCE FOODORDER_SEQ START WITH 10001; --주문이 들어올때 구현할 시퀀스 

--음식 카테고리 정보 추가하기 
INSERT INTO TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO, CATEGORY_NAME) VALUES(3000,'라면류');
INSERT INTO TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO, CATEGORY_NAME) VALUES(3001,'김밥');
INSERT INTO TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO, CATEGORY_NAME) VALUES(3002,'과자');
INSERT INTO TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO, CATEGORY_NAME) VALUES(3003,'음료수');I
INSERT INTO TB_SAMPLE_FOOD_CATEGORIES (CATEGORY_NO, CATEGORY_NAME) VALUES(3004,'기타');

--음식정보 추가하기 
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'신라면',3500,100,'판매중', 3000);
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'진라면',3500,100,'판매중', 3000);
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'불닭볶음면',3500,100,'판매중', 3000);
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'참치김밥',2500,100,'판매중', 3001);
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'치즈김밥',2500,100,'판매중',3001);
INSERT INTO TB_SAMPLE_FOODS VALUES (FOOD_SEQ.NEXTVAL,'불고기김밥',3500,100,'판매중',3001);

COMMIT;
