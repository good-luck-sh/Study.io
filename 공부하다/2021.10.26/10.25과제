--EMPLOYEES 테이블에서 이름이 8자인 직원들의 이름을 조회하기 
SELECT FIRST_NAME, LENGTH(FIRST_NAME) AS NAME_NUMBER
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 8
ORDER BY LENGTH(FIRST_NAME) DESC;
--------------------------------------------------------------------------
--강사님
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 8;

--EMPLOYEES 테이블에서 이름이 8글자 이상인 직원들의 이름과 글자수를 조회하기 
SELECT FIRST_NAME, LENGTH(FIRST_NAME) AS NAME_LENGTH
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) >= 8
ORDER BY LENGTH(FIRST_NAME) DESC;
--------------------------------------------------------------------------
--강사님, 좌항에 표현식을 적는것은 안좋은 쿼리에 속한다. 
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) >= 8;
--EMPLOYEES 테이블에서 직원의 이름을 전부 대문자로 변환했을 때 3번째 글자가 'E'인 모든 직원의 이름을 조회하기 
SELECT FIRST_NAME, UPPER(FIRST_NAME), SUBSTR(FIRST_NAME,1,3) ,INSTR(FIRST_NAME,'E')
FROM EMPLOYEES;
--------------------------------------------------------------------------
--강사님
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SUBSTR(UPPER(FIRST_NAME), 3 ,1) = 'E'; --3번째에서 1개

--EMPLOYEES 테이블에서 2007년도에 입사한 직원들의 직원아이디, 이름, 입사일을 조회하기 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE >= '2007/01/01' AND HIRE_DATE <= '2007/12/31'; --> 오후 1시에 입사한자들은 못들어옴
--------------------------------------------------------------------------
--강사님
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2007';--기존의 컬럼의 데이터를 변경하기 때문에 아래것을 더 추천한다. 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE >= '2007/01/01' AND HIRE_DATE < TO_DATE('2007/12/31')+1;
--EMPLOYEES 테이블에서 2005년에 입사한 직원 중에서 커미션을 받는 직원의 아이디, 이름, 급여, 커미션을 조회하기 
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT 
FROM EMPLOYEES
WHERE HIRE_DATE >= '2005/01/01' AND HIRE_DATE <TO_DATE('2005/12/31')+1 AND COMMISSION_PCT IS NOT NULL;
--------------------------------------------------------------------------
--강사님
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE HIRE_DATE >= '2005/01/01' AND HIRE_DATE > TO_DATE('2005/12/31')+1
AND COMMISSION_PCT IS NOT NULL;


--EMPLOYEES 테이블에서 오늘이 입사일인 직원의 아이디, 이름, 입사일을 조회하기 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES 
WHERE HIRE_DATE = SYSDATE;
--------------------------------------------------------------------------
--강사님(원래 의도는 일자로 계산하려고 했음)
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE >= TRUNC(SYSDATE); --시분초가 날아가게 

--EMPLOYEES 테이블에서 10월달에 입사한 모든 사원들의 아이디, 이름 입사일을 조회하기 
SELECT EMPLOYEE_ID, FIRST_NAME,HIRE_DATE
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'MM') = '10';
--------------------------------------------------------------------------
--강사님 ---올해 10월달 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'MM') = '10';
--------------------------------------------------------------------------
--강사님 ---이번 달에 입사한 사람 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE>=TO_DATE(TO_CHAR(SYSDATE,'YYYY/MM')||'01');

SELECT TO_DATE(TO_CHAR(SYSDATE,'YYYY/MM')||'01')
FROM DUAL;
--EMPLOYEES 테이블에서 급여를 5000이상 받는 직원들의 아이디, 이름, 급여, 급여 등급을 조회하기 
--급여 등급 : 20000이상 A, 15000이상 B, 10000이상 C 그 외 D다 


SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, 
CASE 
    WHEN SALARY >= 20000 THEN 'A'
    WHEN SALARY >= 15000 THEN 'B'
    WHEN SALARY >= 10000 THEN 'C'
    ELSE 'D'
    END AS "급여 등급"
FROM EMPLOYEES
WHERE SALARY >= 5000;

--------------------------------------------------------------------------
--강사님 
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY,
CASE
    WHEN SALARY >= 20000 THEN 'A'
    WHEN SALARY >= 15000 THEN 'B'
    WHEN SALARY >= 10000 THEN 'C'
    ELSE 'D'
    END SALARY_GRADE
    FROM EMPLOYEES
    WHERE SALARY>=5000
    ORDER BY SALARY_GRADE ASC, SALARY DESC;
    --ORDER BY에서는 별칭을 사용할 수 있음 , WHERE절에서는 사용못함 

--EMPLOYEES 테이블에서 60번 부서에 소속된 사원들의 근무개월수를 오늘을 기준으로 계산해서 조회하기 
--직원아이디, 이름, 입사일, 근무개월수가 조회되어야하고, 근무개월수를 기준으로 오름차순으로 정렬한다. 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, CEIL(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) AS "근무개월수"
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60
ORDER BY HIRE_DATE DESC;
--------------------------------------------------------------------------
--강사님 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)) MONTHS
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60
ORDER BY MONTHS DESC;

-- 사원의 이름과 급여를 표시하고, 급여에 대해서 #로 표시하기
-- '#'하나는 급여 1000에 해당한다.

-- 출력예시
-- 홍길동 4300 ####
-- 김유신 8700 ########
-- 강감찬 6500 ######
SELECT FIRST_NAME,SALARY,ROUND(SALARY/1000) AS PAY 
FROM EMPLOYEES
ORDER BY TO_CHAR(PAY,'#');
--------------------------------------------------------------------------
--강사님 
SELECT FIRST_NAME, SALARY, LPAD('#',TRUNC(SALARY/1000),'#')--전체값을 나눠버림, LPAD인데 길이 만큼 #을 채움
FROM EMPLOYEES;

-- EMPLOYEES 테이블에서 2006년 상반기에 입사한 직원들의 직원아이디, 이름, 입사일, 연봉을 계산하기
-- 연봉은 급여*12 + 급여*커미션*12다.
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, SALARY, SALARY*12 + SALARY*12*NVL(COMMISSION_PCT,0) AS "연봉"
FROM EMPLOYEES
WHERE HIRE_DATE >= '2006/01/01' AND HIRE_DATE <TO_DATE('2006/06/30')+1;
--------------------------------------------------------------------------
--강사님 
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, SALARY*12 + SALARY*12*NVL(COMMISSION_PCT,0) ANNUAL_SALARY
FROM EMPLOYEES
WHERE HIRE_DATE >= '2006/01/01' AND HIRE_DATE<TO_DATE('2006/06/30')+1;
-- EMPLOYEES 테이블에서 100번 상사에게 보고하는 직원중에서 커미션을 받은 직원들의 직원아이디, 이름, 급여, 커미션을 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE MANAGER_ID = 100 AND COMMISSION_PCT IS NOT NULL;
--------------------------------------------------------------------------
--강사님 
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE MANAGER_ID = 100 AND COMMISSION_PCT IS NOT NULL;


-- EMPLOYEES 테이블에서 80번부서에 소속된 직원들의 평균급여, 최소급여, 최대급여를 조회하기
SELECT CEIL(AVG(SALARY)) AS AVERAGE, MIN(SALARY) AS MIN_SALARY , MAX(SALARY) AS MAX_SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;
--------------------------------------------------------------------------
--강사님 
SELECT ROUND(AVG(SALARY)), MIN(SALARY), MAX(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;

-- EMPLOYEES 테이블에서 100번 상사에게 보고하는 직원의 수를 조회하기
SELECT COUNT(*) AS BOS_NUMBER_100
FROM EMPLOYEES
WHERE MANAGER_ID = 100;
--------------------------------------------------------------------------
--강사님 ---조회된 행의 갯수를 새는 것임 
SELECT COUNT(*)
FROM EMPLOYEES
WHERE MANAGER_ID = 100;