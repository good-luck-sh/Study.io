package example_09_13_coding;

import java.util.Scanner;
import java.util.concurrent.atomic.AtomicInteger;


public class StudentApp3Teacher {
	public static void main(String[] args) {
		//학생정보/성적정보를 입력하고, 조회하고, 변경하는 프로그램
		AtomicInteger atomic = new AtomicInteger(101);
		
		//자동으로 번호를 부여해주는 프로그래밍 옆에 적은 번호부터 뽑아서 줌 
		//AtomicInteger은 자동으로 업데이트 되는 숫자를 제공하는 객체다.
		//new AtomicInteger(숫자) : 지정된 숫자부터 시작한다. 
		Scanner scan = new Scanner(System.in);
		//기존의 입력값은 보존되지 않음
		//종료시 main method가 종료됨
		
		int position = 0; //새로 입력한 학생/시험성적 정보를 저장하는 위치정보를 가지고 있는 객체
		Student[] students = new Student[100];
		//샘플 학생 정보 미리 입력해두기 
		
		students[position++] = new Student(atomic.getAndIncrement(),3,"김똥삥",new ScoreDetail(100,90,80));
		students[position++] = new Student(atomic.getAndIncrement(),2,"이순대",new ScoreDetail(10,80,75));
		students[position++] = new Student(atomic.getAndIncrement(),1,"홍길동",new ScoreDetail(60,50,20));
		students[position++] = new Student(atomic.getAndIncrement(),4,"앙버터",new ScoreDetail(40,70,60));
		//배열의 위치를 저장할 변수
		while (true) {
			System.out.println("------------------------");
			System.out.println("1. 조회하기 ");
			System.out.println("2. 입력하기 ");
			System.out.println("3. 수정하기 ");
			System.out.println("3. 삭제하기 ");
			System.out.println("0. 종료 ");
			System.out.println("------------------------");
			System.out.println("메뉴번호를 선택:");
			int menuNo = scan.nextInt();
			if(menuNo==1) {
				System.out.println("[전체 학생/ 성적 정보 출력]");
				if(position == 0) {
					System.out.println("### 등록된 학생/시험성적 정보가 존재하지 않습니다.");					
				} else {
					System.out.println("학번 \t학년\t이름\t국어\t영어\t수학\t총점\t평균");
					for(Student student : students) {
						//유용한 for문은 100개 전체를 출력하려고 하기 때문에 NullPointerException의 오류가 남
						if(student == null) {
							break;//null값이면 for문을 탈출하게, 아래에다가 적을 경우 null에러가 남.첫시작위에 작성해주어야함
							//student참조변수에 null이 대입되면 반복을 중단하고 for문을 탈출한다. 
							//다시 null값으로 올라감
						}
						System.out.print(student.getNo() + "\t");
						System.out.print(student.getGrade() + "\t");
						System.out.print(student.getName() + "\t");
						System.out.print(student.getScore().getKor() + "\t");
						System.out.print(student.getScore().getEng() + "\t");
						System.out.print(student.getScore().getMath() + "\t");
						System.out.print(student.getScore().getTotal() + "\t");
						System.out.print(student.getScore().getAverage()+ "\n");
						
					}System.out.println("### 등록된 학생/시험성적 정보의 출력이 완료되었습니다.");
				}
				
				
			} else if (menuNo == 2) {
				System.out.println("[신규 학생/ 성적 정보 입력]");
				System.out.println("###신규 학생/ 시험성적 점수를 입력하세요 :");
				
					
					//AtomicInteger 객체의 getAndIncrement()메소드를 실행해서 AtomicInteger객체의 현재값을 가져온 다음, 
					//값을 1 증가 시킨다. 
					int no = atomic.getAndIncrement();
					
					System.out.println("이름를 입력하세요 :");
					String name = scan.next();
				
					System.out.println("학년을 입력하세요 :");
					int grade = scan.nextInt();
				
					System.out.println("국어점수를 입력하세요 ");
					int kor = scan.nextInt();
					
					System.out.println("영어점수를 입력하세요 ");
					int eng = scan.nextInt();
					
					System.out.println("수학점수를 입력하세요 ");
					int math = scan.nextInt();
			
					ScoreDetail score = new ScoreDetail(kor, eng, math);
					Student student = new Student(no, grade, name, score);//포함관계까지 작성됨
					
					students[position] = student;//position이 0번째니까 student[0] = student로 입력
					position++;// 입력하고 1이 됨, 그럼 다음입력은 student[1]이 되도록
					System.out.println("###학생/시험성적 정보의 저장이 완료되었습니다. ");
					

				
			}  else if (menuNo == 3) {
				System.out.println("[ 학생/ 성적 정보 변경]");
				System.out.println("시험 성적 정보를 수정합니다.  :");
				System.out.println("수정할 학생의 학번 입력 :");
				int no = scan.nextInt();
				
				System.out.println("수정할 학생의 과목 입력 :");
				String subject = scan.next();

				System.out.println("수정할 학생의 점수 입력 :");
				int value = scan.nextInt();
				
				// 입력한 학번과 같은 학번을 가진 Student 객체의 주소값을 저장할 변수를 생성
				Student foundStudent = null;
				for(Student student : students) {
					//배열에서 순서대로 꺼낸 Student객체의 학번과 입력한 학번이 같은 경우 
					if(student.getNo() == no) {
						//student변수에 저장된 student객체의 주소값을 foundStudent에 저장함
						foundStudent = student;
						break;
						//그리고 종료함 
					} }
					//위에서 입력한 학번과 일치하는 학번을 가진 Student객체가 존재하는 경우 
					if(foundStudent != null ) {//foundStudent의 객체가 null이 아닌경우 
						//검색된 학생의 성적정보를 변경한다. 
						//ScoreDetail의 객체를 만들어서 
						//foundStudent객체가 참조라는 Student객체에 포함된 ScoreDetail객체를 조회해서 그객체의 주소값을 Score변수에 대입한다. 
						ScoreDetail score = foundStudent.getScore();
						//switch문을 이용해서 subject변수에 저장된 값이 각각 "국어","영어","수학"일 때 해당과목의 성적을 변경한다. 
						switch (subject) {//switch문을 사용하면 정확한 값, 글자로 찾을 수 있다.
						case "국어":
						score.setKor(value);
						break;
						case "영어":
						score.setEng(value);
						break;
						case "수학":
						score.setMath(value);
						break;
						}
						System.out.println("### 시험성적 정보의 수정이 완료되었습니다.");
					} else {
						System.out.println("### 학번과 일치하는 학생정보를 찾을 수 없습니다.");
					}

				
				//만약, 존재하지 않은 학번을 입력했다면 foundStudent는 null이다.
				//제일 처음의 foundStudent참조변수값이 null값이다. 
				System.out.println("###시험 성적 정보의 수정이 완료되었습니다. ");
			}  else if (menuNo == 4) {
				System.out.println("[ 학생/성적 정보 삭제]");
			
			} else if (menuNo == 0) {
				System.out.println("[프로그램 종료]");
				break;
			}
		System.out.print("\n\n\n");
		}
		
		scan.close();
	}
	
}
